# syntax=docker/dockerfile:experimental
# exp feature
FROM openjdk:8-jdk-alpine as build
WORKDIR /workspace/app

COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .
COPY src src

#RUN ./mvnw package -Dmaven.test.skip=true
RUN --mount=type=cache,target=/home/boot/.m2 ./mvnw package -DskipTests
RUN mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)



#WORKDIR /usr/share/elasticsearch

# RUN set -ex \
# 	&& printf "The complete list is %s\n" "$?" \
#     && for path in \
# 		./data \
# 		./logs \
# 		./config \
# 		./config/scripts \
# 	; do \
# 		mkdir -p "$path"; \
# 		#chown -R boot:docker "$path"; \
# 	done \
#     && printf "The complete list is %s\n" "$?"

# COPY config ./config

# New layer will add:  COPY ADD RUN
FROM openjdk:8-jdk-alpine
LABEL maintainer "Asin Liu  <codezone@163.com>"
VOLUME /tmp
ARG DEPENDENCY=/workspace/app/target/dependency
COPY --from=build ${DEPENDENCY}/BOOT-INF/lib /app/lib
COPY --from=build ${DEPENDENCY}/META-INF /app/META-INF
COPY --from=build ${DEPENDENCY}/BOOT-INF/classes /app
ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-cp","app:app/lib/*","net.bittx.h2.BootDockerMain"]

